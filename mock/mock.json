{
  "users": [
    {
      "firstName": "John",
      "age": 27
    },
    {
      "firstName": "YUN",
      "age": 27
    },
    {
      "firstName": "Keith",
      "age": 27
    },
    {
      "firstName": "Billy",
      "age": 27
    },
    {
      "firstName": "Crystal",
      "age": "25",
      "id": "2"
    },
    {
      "firstName": "Crystal5",
      "age": "25",
      "id": "3"
    }
  ],
  "categories": [
    {
      "id": 1,
      "url": "http://au2.eliteb2b2c.com/static/team/2016/1212/14814950756837.jpg",
      "title": "景点",
      "number":10
    },
    {
      "id": 12,
      "url": "http://images2015.cnblogs.com/blog/138012/201610/138012-20161022224033873-290248113.png",
      "title": "电影",
      "number":5
    },
    {
      "id": 13,
      "url": "http://images2015.cnblogs.com/blog/138012/201610/138012-20161022224051513-2057698989.png",
      "title": "酒店",
      "number":20
    },
    {
      "id": 15,
      "url": "http://images2015.cnblogs.com/blog/138012/201610/138012-20161022224121920-424129491.png",
      "title": "外卖",
      "number":3
    },
    {
      "id": 16,
      "url": "http://images2015.cnblogs.com/blog/138012/201610/138012-20161022224046342-1896393176.png",
      "title": "火锅",
      "number":5
    },
    {
      "id": 17,
      "url": "http://images2015.cnblogs.com/blog/138012/201610/138012-20161022224057670-257626875.png",
      "title": "丽人",
      "number":30
    },
    {
      "id": 18,
      "url": "http://images2015.cnblogs.com/blog/138012/201610/138012-20161022224040842-2050913385.png",
      "title": "度假出行",
      "number":5
    },
    {
      "id": 20,
      "url": "http://images2015.cnblogs.com/blog/138012/201610/138012-20161022224138123-197921773.png",
      "title": "周边游",
      "number":2
    }

  ],
  "posts": [
    {
      "id": 1,
      "title": "React tutorial 101",
      "categories": "React, es6",
      "author": "YUN",
      "postTime": "2017-06-22",
      "content": "React implements a browser-independent DOM system for performance and cross-browser compatibility. We took the opportunity to clean up a few rough edges in browser DOM implementations.<br/>In React, all DOM properties and attributes (including event handlers) should be camelCased. For example, the HTML attribute tabindex corresponds to the attribute tabIndex in React. The exception is aria-* and data-* attributes, which should be lowercased. For example, you can keep aria-label as aria-label.<br/> dangerouslySetInnerHTML is React's replacement for using innerHTML in the browser DOM. In general, setting HTML from code is risky because it's easy to inadvertently expose your users to a cross-site scripting (XSS) attack. So, you can set HTML directly from React, but you have to type out dangerouslySetInnerHTML and pass an object with a __html key, to remind yourself that it's dangerous."
    },
    {
      "id": 2,
      "title": "My Test Post",
      "categories": "Java",
      "author": "YUN",
      "postTime": "2017-06-22",
      "content": "This is my test post 101"

    },
    {
      "id": 3,
      "title": "React tutorial 102",
      "categories": "React, es6",
      "author": "YUN",
      "postTime": "2017-06-22",
      "content": "React implements a browser-independent DOM system for performance and cross-browser compatibility. We took the opportunity to clean up a few rough edges in browser DOM implementations.<br/>In React, all DOM properties and attributes (including event handlers) should be camelCased. For example, the HTML attribute tabindex corresponds to the attribute tabIndex in React. The exception is aria-* and data-* attributes, which should be lowercased. For example, you can keep aria-label as aria-label.<br/> dangerouslySetInnerHTML is React's replacement for using innerHTML in the browser DOM. In general, setting HTML from code is risky because it's easy to inadvertently expose your users to a cross-site scripting (XSS) attack. So, you can set HTML directly from React, but you have to type out dangerouslySetInnerHTML and pass an object with a __html key, to remind yourself that it's dangerous."
    },
    {
      "id": 4,
      "title": "My Test Post2",
      "categories": "Java",
      "author": "YUN",
      "postTime": "2017-06-22",
      "content": "This is my test Post2"

    }
  ]
}